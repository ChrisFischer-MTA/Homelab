# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#0
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#

# XXX: I think it goes without saying that I maintain two homelab setups, my testing homelab and then the homelab that runs on my
# actual infrastructure at home. This file is the "testing" file. As a result, the client secrets and such are not real secrets.
# They're here for demonstration.


<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName keycloak-test
    ServerAlias keycloak-test.local
    ProxyPreserveHost On
    ProxyPass "/"  "http://homelab-keycloak-1:8080/"
    ProxyPassReverse "/"  "http://homelab-keycloak-1:8080/"    
    ProxyPassReverseCookieDomain "homelab-keycloak-1" "keycloak-test"

</VirtualHost>

<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName journalapp-test
    ServerAlias journalapp-test.local

    OIDCCryptoPassphrase Rosy2-Reptile-Unlikable
    OIDCProviderMetadataURL http://homelab-keycloak-1:8080/realms/journal-app-realm/.well-known/openid-configuration
    OIDCClientID journaling-app-client
    OIDCClientSecret EaKi3RhcatQj9X7V0wngbcpZgpXA0yQf
    OIDCRedirectURI http://journalapp-test:8080/login
    OIDCSessionMaxDuration 60
    OIDCRemoteUserClaim preferred_username


    <Location />
    AuthType openid-connect
    Require valid-user
    ProxyPass "http://homelab-journal-django-container-1:8000/"
    ProxyPassReverse "http://homelab-journal-django-container-1:8000/"    
    ProxyPreserveHost On
    </Location>


</VirtualHost>

<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName webui-test
    ServerAlias webui-test.local
    ProxyPreserveHost On
    ProxyPass "/"  "http://homelab-ollama-webui-1:8080/"
    ProxyPassReverse "/"  "http://homelab-ollama-webui-1:8080/"    
    
    # Open WebUI uses web sockets, gah.
    <Location /ws>
        ProxyPass ws://homelab-ollama-webui-1:8080/ws
        ProxyPassReverse ws://homelab-ollama-webui-1:8080/ws
    </Location>
</VirtualHost>


<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName http-test
    ServerAlias http-test.local
    OIDCCryptoPassphrase Rosy2-Reptile-Unlikable
    OIDCProviderMetadataURL http://homelab-keycloak-1:8080/realms/journal-app-realm/.well-known/openid-configuration
    OIDCClientID journaling-app-client
    OIDCClientSecret EaKi3RhcatQj9X7V0wngbcpZgpXA0yQf
    OIDCRedirectURI http://http-test.local:8080/login
    OIDCSessionMaxDuration 60

    # Proxypasses for homelab to catch log in redirect
    # ProxyPass "http://homelab-keycloak-1:8080/" "http://keycloak-test:8081/"
    # ProxyPassReverse "http://homelab-keycloak-1:8080/" "http://keycloak-test:8081/"

    # RewriteEngine On
    # RewriteCond %{HTTP:Location} ^http://homelab-keycloak-1:8080/(.*)$
    # RewriteRule ^(.*)$ http://keycloak-test.local:8081/$1 [R=302,L]
    OIDCRemoteUserClaim preferred_username
        
    <Location />
    AuthType openid-connect
    Require valid-user
    ProxyPass "http://homelab-isolated-container-1/"
    ProxyPassReverse "http://homelab-isolated-container-1/"
    </Location>

</VirtualHost>


<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName homelab-homepage-1
    ServerAlias homepage-test.local
    ProxyPreserveHost On
    ProxyPass "/"  "http://homelab-homepage-1:3000/"
    ProxyPassReverse "/"  "http://homelab-homepage-1:3000/"    
</VirtualHost>


<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName nextcloud-test
    ServerAlias nextcloud-test.local
    ProxyPreserveHost On
    ProxyPass "/"  "http://homelab-nextcloud-1/"
    ProxyPassReverse "/"  "http://homelab-nextcloud-1/"    
</VirtualHost>

<VirtualHost *:80>
#    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName jellyfin-test
    ServerAlias jellyfin-test.local
    ProxyPreserveHost On
    ProxyPass "/"  "http://homelab-jellyfin-1:8096/"
    ProxyPassReverse "/"  "http://homelab-jellyfin-1:8096/"    
</VirtualHost>



<VirtualHost *:80>
    ServerAdmin webmaster@dummy-host.example.com
    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName dummy-host.example.com
    ServerAlias www.dummy-host.example.com
    ErrorLog "logs/dummy-host.example.com-error_log"
    CustomLog "logs/dummy-host.example.com-access_log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin webmaster@dummy-host2.example.com
    DocumentRoot "/usr/local/apache2/docs/dummy-host2.example.com"
    ServerName dummy-host2.example.com
    ErrorLog "logs/dummy-host2.example.com-error_log"
    CustomLog "logs/dummy-host2.example.com-access_log" common
</VirtualHost>

